trigger:
- master   # or master, depending on your branch name

pool:
  name: 'azure_agent'

variables:
  SONAR_HOST_URL: 'http://172.24.6.180:9002'   # Replace with your Ubuntu machine IP
  SONAR_PROJECT_KEY: 'spring-boot-hello'
  SONAR_PROJECT_NAME: 'Spring Boot Hello'
  
steps:

# Install Java 17
- task: JavaToolInstaller@1
  inputs:
    versionSpec: '17'
    jdkArchitectureOption: 'x64'
    jdkSourceOption: 'PreInstalled'

# 1. Prepare SonarQube
- task: SonarQubePrepare@7
  inputs:
    SonarQube: 'sonarqube'   # your service connection
    scannerMode: 'other'           # works for Maven/Gradle too
    configMode: 'manual'
    projectKey: 'spring-boot-hello'
    projectName: 'Spring Boot Hello'
    extraProperties: |
      sonar.projectKey=$(SONAR_PROJECT_KEY)
      sonar.projectName=$(SONAR_PROJECT_NAME)
      sonar.host.url=$(SONAR_HOST_URL)


# 2. Run Maven build + SonarQube analysis in one step
- task: Maven@4
  inputs:
    mavenPomFile: 'pom.xml'
    goals: 'clean verify sonar:sonar'
    options: '-Dsonar.login=$(SONAR_TOKEN)'

# 3. Publish results to SonarQube
- task: SonarQubePublish@7
  inputs:
    pollingTimeoutSec: '300'
